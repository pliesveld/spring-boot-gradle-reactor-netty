swagger: "2.0"
info:
  version: "1.0"
  title: "TODO"
basePath: "/v1"
paths:
  /list:
    get:
      tags:
      - "list"
      summary: "Search all TODO lists"
      description: ""
      operationId: "getAllLists"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TodoList"
        405:
          description: "Invalid input"
    post:
      tags:
      - "list"
      summary: "Add a new list to the collection"
      description: ""
      operationId: "addList"
      parameters:
      - in: "body"
        name: "body"
        description: "List object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/TodoList"
      responses:
        405:
          description: "Invalid input"
  /list/{listId}:
    get:
      tags:
      - "list"
      summary: "Find todo list by ID"
      description: "Returns a todo list"
      operationId: "getListById"
      parameters:
      - name: "listId"
        in: "path"
        description: "ID of list to return"
        required: true
        type: "integer"
        format: "int64"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/TodoList"
        400:
          description: "Invalid ID supplied"
        404:
          description: "List not found"
    delete:
      tags:
      - "list"
      summary: "Deletes a list"
      description: ""
      operationId: "deleteList"
      produces:
      - "application/json"
      parameters:
      - name: "listId"
        in: "path"
        description: "List id to delete"
        required: true
        type: "integer"
        format: "int64"
      responses:
        400:
          description: "Invalid ID supplied"
        404:
          description: "List not found"
    put:
      tags:
      - "list"
      summary: "Updates a list in the collection"
      description: ""
      operationId: "updateList"
      consumes:
      - "application/x-www-form-urlencoded"
      produces:
      - "application/json"
      parameters:
      - name: "listId"
        in: "path"
        description: "ID of list that needs to be updated"
        required: true
        type: "integer"
        format: "int64"
      - in: "body"
        name: "body"
        description: "List object that needs to be added to the store"
        required: true
        schema:
          $ref: "#/definitions/TodoList"
      responses:
        405:
          description: "Invalid input"

definitions:
  TodoListItem:
    type: "object"
    properties:
      name:
        type: "string"
        example: "Walk the pet outside"
      status:
        type: "string"
        description: "list item status"
        enum:
        - "pending"
        - "completed"
  TodoList:
    type: "object"
    required:
    - "name"
    properties:
      id:
        type: "integer"
        format: "int64"
      name:
        type: "string"
        example: "A list of things TODO for today"
      items:
        type: "array"
        items:
          $ref: "#/definitions/TodoListItem"

